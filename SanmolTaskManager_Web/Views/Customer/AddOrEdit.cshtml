@model SanmolTaskManager_Models.Customer

@{
    ViewData["Title"] = Model.Id == 0 ? "Add New Customer" : "Edit Customer";
}

<style>
    .is-invalid {
        border-color: #dc3545 !important;
    }

</style>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="py-3 px-4 rounded shadow-sm mb-4 text-center"
                 style="background: radial-gradient(circle, #ffffff 0%, #e0e9ff 80%);">
                <h2 class="text-primary font-weight-bold mb-0">
                    <i class="fas @(Model.Id == 0 ? "fa-user-plus" : "fa-user-edit") mr-2"></i> @ViewData["Title"]
                </h2>
            </div>

            <div class="card shadow mb-4">
                <div class="card-body">
                    <form id="customerForm" asp-action="AddOrEdit" method="post">
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" name="Page" value="@Context.Request.Query["page"]" />


                        <div class="form-group mb-3">
                            <label asp-for="Name" class="font-weight-bold text-dark required"></label>
                            <input asp-for="Name" class="form-control" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Email" class="font-weight-bold text-dark required"></label>
                            <input asp-for="Email" class="form-control" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Phone" class="font-weight-bold text-dark required"></label>
                            <input asp-for="Phone" class="form-control" id="phone" name="Phone" />
                            <span asp-validation-for="Phone" class="text-danger"></span>
                        </div>

                        <div class="form-group d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Save
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        var phoneInput = document.querySelector("#phone");
        var iti = window.intlTelInput(phoneInput, {
            initialCountry: "in",
            separateDialCode: true,
            nationalMode: false,
            formatOnDisplay: true,

        });

        // Set number in edit mode
        const existingPhone = "@Html.Raw(Model.Phone)";
        if (existingPhone && existingPhone.length > 0) {
            iti.setNumber(existingPhone);
        }


        // AJAX form submit
        $(document).ready(function () {
            $("#customerForm").off("submit").on("submit", function (e) {
                e.preventDefault();

                // Client-side validation check
                if (!$(this).valid()) {
                    return;
                }

                // intl-tel-input validation
                if (!iti.isValidNumber()) {
                    showError("Please enter a valid phone number.");
                    phoneInput.classList.add("is-invalid");
                    return;
                } else {
                    phoneInput.classList.remove("is-invalid");
                }

                // Set full phone value
                phoneInput.value = iti.getNumber();

                // Submit via AJAX
                $.ajax({
                    url: $(this).attr("action"),
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.success) {
                            showSuccess(res.message || "Customer saved successfully.");
                            setTimeout(() => {
                                window.location.href = res.redirectUrl;
                            }, 1500);
                        } else {
                            showError(res.message || "Something went wrong.");
                        }
                    },
                    error: function (err) {
                        showError("Server error occurred.");
                        console.log(err);
                    }
                });
            });
        });
    </script>

    <script>
        @if (TempData["Success"] != null)
        {
            <text>showSuccess("@TempData["Success"]"); </text>
        }
        else if (TempData["Error"] != null)
        {
            <text>showError("@TempData["Error"]"); </text>
        }
    </script>
}